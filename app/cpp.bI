# universal .cpp template file for any program autogenerated by bI system
.file cpp.cpp
// $AUTOGEN$
\#include "hpp.hpp"
\#define YYERR "\\n\\n"<<msg<<" \#"<<yylineno<<" ["<<yytext<<"]\\n\\n"
void yyerror(string msg) { cerr<<YYERR; cout<<YYERR; exit(-1); }
int main() { env_init(); return yyparse(); }

// generic writers
void W(char c,bool)	{ cerr << c; }
void W(sym *o,bool)	{ cerr << o->dump(); }

// simplified sym realization
sym::sym(string T,string V)	{ tag=T; value=V; }
string sym::dump(int)		{ return tagval(); }
string sym::tagval()		{ return "<"+tag+":"+value+">"; }
sym* sym::eval()			{ return this; }
sym* sym::add(sym*o)		{ return o; }

// global env[]ironment used for program / config script engine data exchange
map<string,sym*> env;
void env_init(){}
.eof
