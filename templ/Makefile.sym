.module templ
.file Makefile
$'## ',AUTOGEN,' ##'
$'\n.PHONY: exec'
exec: ./$MODULE,'$(EXE)'
$'\t./',MODULE,'$(EXE) < ',MODULE,'.sym > ',MODULE,'.log'
$'\t./',MODULE,'$(EXE) < Makefile.sym > Makefile.log'
$'\t./',MODULE,'$(EXE) < gitignore.sym > gitignore.log'
$'\t./',MODULE,'$(EXE) < vim.sym > vim.log'
$'\t./',MODULE,'$(EXE) < ypp.sym  > core.log'
$'\t./',MODULE,'$(EXE) < lpp.sym >> core.log'
$'\t./',MODULE,'$(EXE) < hpp.sym >> core.log'
$'\t./',MODULE,'$(EXE) < cpp.sym >> core.log'
$'\tmkdir -p ',MODULE,'\n\tcp *.sym ',MODULE,'/'
$'\n.PHONY: clean\nclean:'
$'\trm -rf ',MODULE,' tmp ./',MODULE,'$(EXE) *.log '
$'\trm -rf ',MODULE,'.lex.?pp ',MODULE,'.tab.?pp *~ .*~'
$'\n.PHONY: upgrade\nupgrade:'
$'\tcp ',MODULE,'/README.md ./'
$'\tcp ',MODULE,'/.gitignore ./'
$'\tcp ',MODULE,'/Makefile ./'
$'\tcp ',MODULE,'/filetype.vim ../sym/'
$'\tcp ',MODULE,'/filetype.vim ./'
$'\tcp ',MODULE,'/syntax.vim ../sym/'
$'\tcp ',MODULE,'/syntax.vim ./'
$'\nC = ',MODULE,'.cpp ',MODULE,'.tab.cpp ',MODULE,'.lex.cpp'
$'H = ',MODULE,'.hpp ',MODULE,'.tab.hpp'
$'./',MODULE,'$(EXE): $(C) $(H)'
$'\t$(CXX) $(CXXFILES) -o $@ $(C)'
$MODULE,'.tab.cpp: ',MODULE,'.ypp'
$'\tbison $<'
$MODULE,'.lex.cpp: ',MODULE,'.lpp'
$'\tflex -o $@ $<'
.eof

