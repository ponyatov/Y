/* DO NOT EDIT: this file was autogened by bI language system */
%{
#include "bI.hpp"
%}
%defines
%union {
	char c;
	object *o;
}
%token <c> CHAR EOL SX AX COMMA
token <o> DIRECTIVE FFILE FEOF SYM STR
%type <o> ex list
%%
bI:
	| bI DIRECTIVE	{ W($2); }
	| bI FFILE ex EOL		{ W(new directive(".file "+$3->eval()->value),false); W($4,false); }
	| bI FFILE list EOL	{ W(new directive(".file "+$3->eval()->value),false);  W($4,false); }
	| bI FEOF EOL		{ W((new directive(".eof"))->tagval(),false); }
	| bI AX ex			{ W($3->dump()); }
	| bI AX list		{ W($3->dump()); }
	| bI SX ex			{ W($3->eval()->value); }
	| bI SX list		{ W($3->eval()->value); }
	| bI EOL			{ W($2); }
	| bI CHAR			{ W($2); }
;

ex :
	  SYM				
	| STR
;

list :
	  ex COMMA ex		{ $$ = new object("list",""); $$->join($1); $$->join($3); }
	| list COMMA ex		{ $$ = $1; $$->join($3); }
;

%%

