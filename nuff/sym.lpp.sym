%{
$HPP
\#define TC(X)		{ yylval.c = yytext[0]; 			return X; }
\#define T1(X)		{ yylval.c = yytext[1]; 			return X; }
\#define TS(X)		{ yylval.s = new string(yytext);	return X; }
\#define TO(C,X)		{ yylval.o = new object(C,yytext);	return X; }
%}
%option noyywrap
%option yylineno
%x x
%%
\#[^\\n]*			{}							/* line comment */
\\\\.				T1(CHAR)					/* \\-escaped char */
\\$				{BEGIN(x); TC(SX);}			/* \$-prefixed expression */
\@				{BEGIN(x); TC(QX);}			/* dump expression as AST */
<x>[A-Za-z0-9]+	TO("sym",SYM)				/* \$symbol */
<x>\\n			{BEGIN(INITIAL); TC(CHAR); }/* end line as expr end marker */
<x>.			{BEGIN(INITIAL); TC(CHAR); }/* any other char as expr end */
\\n				TC(CHAR)					/* End Of Line */
.				TC(CHAR)					/* any other char */
%%

