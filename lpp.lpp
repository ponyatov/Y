%{
#include "hpp.hpp"
string StrBuf;
void incFile(sym* inc) {
	yyin = fopen(inc->value.c_str(),"r");
	if (!yyin) yyerror(inc->tagval());
	yypush_buffer_state(yy_create_buffer(yyin,YY_BUF_SIZE));
}
%}
%option noyywrap
%option yylineno
S [\-\+]?
D [0-9]+
X [ \t]*[^\n]*
					/* expression parsing state */
%x xx
					/* string parsing state */
%x ss
%%
\\.					T1(CHAR)
<*>^#[^\n]*\n+		{W(yytext,false);}	/* full comment line: skip with EOLs */
<*>#[^\n]*			{W(yytext,false);}	/* end line comment */

^\.end				{W(new Directive(yytext),false);yyterminate();}
^\.module{X}		TX(Directive,MODULE)
^\.file{X}			TX(Directive,FFILE)
^\.eof				TX(Directive,FEOF)
^\.[a-z]+{X}		TX(Directive,DIRECTIVE)

\$					{BEGIN(xx);TC(SX);}			/* expression mode on */
<xx>\n				{BEGIN(INITIAL);}			/* expression mode off */
<xx>\$				{BEGIN(INITIAL);}			/* expression mode off */
<xx>[ \t\r]+		{W(yytext,false);}			/* bypass spaces */

\n			TC(CHAR)
.			TC(CHAR)
<<EOF>>		{ yypop_buffer_state(); if ( !YY_CURRENT_BUFFER ) yyterminate();}
%%
