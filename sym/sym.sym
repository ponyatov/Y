
.module sym
.title	pure symbolic script engine template generator

.inc 'readme.sym'

.inc 'gitignore.sym'
.eof

.inc 'makefile.sym'

.inc 'parser_head.sym'
.inc 'parser_foot.sym'

.inc 'lexer_head.sym'
.inc 'lexer_foot.sym'

.inc 'hpp.sym'
.inc 'cpp.sym'

.file 'filetype.vim'
au BufNewFile,BufRead *.sym set filetype=sym
au BufNewFile,BufRead *.sym tabf %:r.log|set filetype=sym|set autoread
au BufNewFile,BufRead *.sym tabf %:r.ypp|set filetype=yacc
au BufNewFile,BufRead *.sym tabf %:r.lpp|set filetype=lex
au BufNewFile,BufRead *.sym tabf %:r.hpp|set filetype=cpp
au BufNewFile,BufRead *.sym tabf %:r.cpp|set filetype=cpp
au BufNewFile,BufRead *.sym tabf Makefile|set filetype=make
au BufNewFile,BufRead *.sym tabn 1
.eof
.file 'syntax.vim'
" Language: bI/sym
" Maintainer: $AUTHOR
" GitHub: $GITHUB,MODULE

" line comments
syntax match	Comment		"\\v\#.*"

" directives 
syntax match	Todo		"\\v^\\.[a-z]+[\\+\\-]?[ \\t]*"

"" literals

" numbers
syntax match	Constant	"\\v[0-9]+"

" strings
syntax region	String		start="'" end="'"
syntax region	String		start="\\"" end="\\""

" code inlines
syntax match Keyword "\\v\\\$"
syntax match Keyword "\\v\\\@"

"let b:current_syntax = "sym"

.eof


.file 'vimedit.bat'
\@gvim -p $FILES
.eof

