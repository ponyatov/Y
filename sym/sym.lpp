%{
#include "sym.hpp"
#define TC(X)	{ yylval.c = yytext[0]; return X; }
#define TS(C,X)	{ yylval.s = new sym(C,yytext); return X; }
%}

%option noyywrap
%option yylineno

%%
[\r]			{}
^\.sec[^\n]+\n	{W(yytext);}
^\.module		TS("directive",MODULE)
^\.file			TS("directive",FFILE)
^\.eof			TS("directive",FEOF)
^\.[a-z]+		TS("directive",S)
[a-zA-Z0-9_]+	TS("sym",S)
[\+\-\*\/\<\>]	TS("op",S)
\n				TC(EOL)
.				{W(yytext);}
%%

