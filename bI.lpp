%{
#include "bI.hpp"

#define TC(X)	{ yylval.c = yytext[0]; return X; }
#define T2(X)	{ yylval.c = yytext[1]; return X; }
#define TS(X)	{ yylval.s = new string(yytext); return X; }
#define TA(C,X)	{ yylval.a = new AST(C,yytext); return X; }
%}

%option nounput
%option noyywrap
%option yylineno
%option 8bit

%s SEX

S	[\+\-]{0,1}
D	[0-9]+
az	[a-z]+
AZ	[A-Z]+
aZ	[a-zA-Z]+
URL	https{0,1}:\/\/[a-z\.\/]+

%%

\\#							T2(C);
#[^\n]*\n					{}				/* line comment */
#\|[^\|]*\|#				{}				/* block comment */

\$\(						{ TC(SX); BEGIN(SEX); }
\)\$						{ TC(EX); BEGIN(INITIAL); }
<SEX>\(							TC(LP)
<SEX>\)							TC(RP)
<SEX>\+\+						TA("op",INC)
<SEX>\-\-						TA("op",DEC)
<SEX>\+							TA("op",ADD)
<SEX>\-							TA("op",SUB)
<SEX>\*							TA("op",MUL)
<SEX>\/							TA("op",DIV)


\.file						TS(FFILE)
\.{az}						TS(DOTTY)
<SEX>{URL}					TA("url",URL)
{URL}						TS(SURL)
{aZ}\.{az}|Makefile			TS(FNAME)

{D}							TA("int",NUM)
0x[0-9A-F]+					TA("hex",NUM)
0b[01]+						TA("bin",NUM)
{D}\.{D}					TA("float",NUM)
{S}{D}[eE]{S}{D}			TA("float",NUM)
<SEX>{aZ}					TA("id",ID)

[ \t]						TC(SPACE)
\n							TC(EOL);
.							TC(C);
%%
