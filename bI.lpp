%{
#include "bI.hpp"

#define TC(X)	{ yylval.c = yytext[0]; return X; }
#define TS(X)	{ yylval.s = new string(yytext); return X; }
#define TA(C,X)	{ yylval.a = new AST(C,yytext); return X; }
%}

%option nounput
%option noyywrap
%option yylineno
%option 8bit

%x sx
%x urs

S	[\+\-]{0,1}
D	[0-9]+
az	[a-z]+
AZ	[A-Z]+
aZ	[a-zA-Z]+
UR	https{0,1}:\/\/[a-z0-9\.\/\#\-_]+
EM	[a-z]+\@[a-z\.]+

%%

\\.							TS(EC);
#[^\n]*\n					{}				/* line comment */
#\|[^\|]*\|#				{}				/* block comment */

\$\(						{ BEGIN(sx); TC(SX); }
<sx>\)\$					{ BEGIN(INITIAL); TC(EX); }
<sx>\(						TC(LP)
<sx>\)						TC(RP)
<sx>\+\+					TA("op",INC)
<sx>\-\-					TA("op",DEC)
<sx>\+						TA("op",ADD)
<sx>\-						TA("op",SUB)
<sx>\*						TA("op",MUL)
<sx>\/						TA("op",DIV)

\.file						TS(FFILE)
\.eof						TS(FEOF)
\.{az}						TS(DOTTY)
<*>{EM}						TA("email",OBJ)
<*>{UR}						TA("url",OBJ)
{aZ}\.{az}|Makefile			TS(FNAME)

<sx>{D}						TA("int",NUM)
<sx>0x[0-9A-F]+				TA("hex",NUM)
<sx>0b[01]+					TA("bin",NUM)
<sx>{D}\.{D}				TA("float",NUM)
<sx>{S}{D}[eE]{S}{D}		TA("float",NUM)
\${aZ}						TA("id",ID)
<sx>{aZ}					TA("id",ID)

[ \t]						TC(SPACE)
\n							TC(EOL);
.							TC(C);
%%
