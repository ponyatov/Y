%{
#include "bI.hpp"

#define TC(X)		{ yylval.c = yytext[0]; return X; }
#define TS(X)		{ yylval.s = new string(yytext); return X; }
#define TA(C,X)		{ yylval.a = new AST(C,yytext); return X; }
#define TV(C,V,X)	{ yylval.a = new AST(C,V); return X; }

int PAR=0; // paren depth
%}

%option nounput
%option noyywrap
%option yylineno
%option 8bit

%x sx
%x urs
%s commentB
%s commentL

S	[\+\-]{0,1}
D	[0-9]+
az	[a-z]+
AZ	[A-Z]+
aZ	[a-zA-Z]+
UR	https{0,1}:\/\/[a-z0-9\.\/\#\-_]+
EM	\<{0,1}[a-z]+\@[a-z\.]+\>{0,1}

%%

<*>\<end\>					TS(END);

<INITIAL>\\.				TS(EC);
<INITIAL>#\|				{BEGIN(commentB);}
<commentB>\|#				{BEGIN(INITIAL);}
<INITIAL>#					{BEGIN(commentL);}
<commentL>\n				{BEGIN(INITIAL);}
<commentB,commentL>.		{}

\.file						TS(FFILE)
\.eof						TV("eof","",FEOF)
<INITIAL>\.{az}				TS(DOTTY)
<INITIAL,sx>{EM}			TA("email",OBJ)
<INITIAL,sx>{UR}			TA("url",OBJ)
<INITIAL,sx>{aZ}\.{az}|Makefile			TS(FNAME)

<INITIAL>\$					{BEGIN(sx); PAR=0; TS(SX);}
<sx>\(						{PAR++; TA("(",LP);}
<sx>\)						{if (--PAR==0) BEGIN(INITIAL); TA(")",RP); }
<sx>,						TC(COMMA)
<sx>\+\+					TA("op",INC)
<sx>\-\-					TA("op",DEC)
<sx>\+						TA("op",ADD)
<sx>\-						TA("op",SUB)
<sx>\*						TA("op",MUL)
<sx>\/						TA("op",DIV)
<sx>\<						TA("op",LW)
<sx>\>						TA("op",GR)

<sx>{D}						TA("int",NUM)
<sx>0x[0-9A-F]+				TA("hex",NUM)
<sx>0b[01]+					TA("bin",NUM)
<sx>{D}\.{D}				TA("float",NUM)
<sx>{S}{D}[eE]{S}{D}		TA("float",NUM)
<sx>{aZ}					{if (PAR==0) BEGIN(INITIAL); TA("id",ID);}

<INITIAL>[ \t]				TC(SPACE)
<sx>[ \r\n\t]				{}
\n							TC(EOL);
.							TC(C);
%%

