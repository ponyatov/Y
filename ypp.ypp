%{
#include "hpp.hpp"
%}
%defines
%union {
	char c;
	string *s;
	sym *o;
}
%token <c> CHAR AX SX QX
%token <o> DIRECTIVE SYM NUM STR
%token <o> LQ RQ
%type <o> ex xx list
%%
PIL :
	| PIL CHAR			{ W($2); }
	| PIL DIRECTIVE		{ W($2); }
	| PIL AX xx			{ W($3,false); }
	| PIL SX xx			{ W($3->eval()); }
	| PIL QX xx			{ W($3,false); W("_",false); W($3->eval()); }
;
ex : SYM | NUM | STR
	| LQ RQ				{ $$ = new List(); }
	| LQ xx RQ			{ $$ = $2; }
;
list :					
	  ex ex				{ $$ = new List(); $$->join($1); $$->join($2); }
	| list ex			{ $$ = $1; $$->join($2); }
;
xx : ex | list ;
%%
