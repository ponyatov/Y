%{
#include "hpp.hpp"
%}
%defines %union { char c; sym *o; }
%token <c> CHAR SX
%token <o> DIRECTIVE MODULE FFILE FEOF
%token <o> SYM NUM STR
%token <o> EQ LQ RQ LP RP
%type <o> ex
%%
bI :
	| bI CHAR		{ W($2); }
	| bI DIRECTIVE	{ W($2); }
	| bI MODULE		{ W($2);
					  if (curr_module) delete curr_module;
					  curr_module = new Module($2->value);
					  env["MODULE"]=curr_module; }
	| bI FFILE CHAR	{ W($2,false); W($3,false); }
	| bI FEOF  CHAR	{ W($2,false); W($3,false); }
	| bI SX ex		{ W($3->eval()->value); }
;
ex:	SYM | NUM | STR
;
%%
