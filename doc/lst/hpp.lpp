%{
#include <fstream>
std::ofstream once("tmp/hpp.once");
std::ofstream lex("tmp/hpp.lex");
std::ofstream pars("tmp/hpp.pars");
std::ofstream inc("tmp/hpp.inc");
std::ofstream ast("tmp/hpp.ast");
std::ofstream wrt("tmp/hpp.wrt");
std::ofstream env("tmp/hpp.env");
%}
%option main
%x AST
%%
^.+_H_.+\n					{once<<yytext;}
^.*==\ lexer.*\n			{lex<<yytext;}
^.*yy(lex|line|text).*\n	{lex<<yytext;}
^.*==\ parser.*\n			{pars<<yytext;}
^.*yy(parse|error).*\n		{pars<<yytext;}
^.*==\ std.inc.*\n			{inc<<yytext;}
^#include\ <.+\n			{inc<<yytext;}
^struct\ AST				{ast<<yytext; BEGIN(AST);}
<AST>\};\n					{ast<<yytext; BEGIN(INITIAL);}
<AST>.*\n					{ast<<yytext;}
^.+\ W\(.+\n				{wrt<<yytext;}
%%